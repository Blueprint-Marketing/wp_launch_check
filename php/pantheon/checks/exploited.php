<?php
namespace Pantheon\Checks;

use Pantheon\Utils;
use Pantheon\Checkimplementation;

class Exploited extends Checkimplementation {

  public function init() {
    $this->action = 'No exploits found.';
    $this->description = 'Looking for exploited files.';
    $this->score = 2;
    $this->result = '';
    $this->label = 'Probable exploits';
    return $this;
  }

  public function run() {
    $regex = '.*eval\(.*base64_decode\(.*';
    $search_path = \WP_CLI::get_config('path').'/wp-content/';
    $alerts = \Pantheon\Utils::search_php_files($search_path, $regex);
    if (!empty($alerts)) {
      $details = sprintf( "Found %s files that contain likely exploits \n\t-> %s",
      count($alerts),
      join("\n\t-> ", $alerts)
      );
      $this->score = -1;
      $this->result .= $details;
    }
    return $this;
  }

}
