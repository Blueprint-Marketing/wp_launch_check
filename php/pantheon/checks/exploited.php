<?php
namespace Pantheon\Checks;

use Pantheon\Utils;
use Pantheon\Checkimplementation;
use Pantheon\Messenger;

class Exploited extends Checkimplementation {

  public function init() {
    $this->action = 'No exploits found.';
    $this->description = 'Looking for exploited files.';
    $this->score = 2;
    $this->result = '';
    $this->label = 'Probable exploits';
    $this->alerts = array();
    self::$instance = $this;
    return $this;
  }

  public function run($file) {
    $regex = '.*eval\(.*base64_decode\(.*';
    if ( preg_match('#'.$regex.'#s',$file->getContents()) !== 0 ) {
      $this->alerts[] = $file->getRelativePathname();
    }
    return $this;
  }

  public function message(Messenger $messenger) {
      if (!empty($this->alerts)) {
        $details = sprintf( "Found %s files that contain likely exploits \n\t-> %s",
          count($this->alerts),
          join("\n\t-> ", $this->alerts)
        );
        $this->score = -1;
        $this->result .= $details;
    }
    $messenger->addMessage(get_object_vars($this));
  }
}
